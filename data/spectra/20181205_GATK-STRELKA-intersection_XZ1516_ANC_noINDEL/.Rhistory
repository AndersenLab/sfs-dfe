scale_x_continuous(breaks=c(0,0.5,1), limits = c(0,1))+
geom_abline(slope=1,intercept = 0, linetype = 2, alpha = 0.5)+
theme(strip.background = element_blank(),
legend.position = "top",
panel.grid.minor = element_blank())
ggsave(glue::glue("{resub.plots}FS13_GWAS-H2_v_h2.pdf"),
height = 8,
width = 10)
ggplot(pt_df)+
aes(y = Broad_H2_add_epp_model, x = Broad_H2_add_model)+
geom_point(color = "gray50",
data = dplyr::filter(pt_df, !trait %in% c("PC1","norm.n","median.TOF"),
condition == "arsenic3")) +
geom_point(aes(color = factor(cpoint, labels=c("PC1","Animal Length","Brood Size")),
size = factor(cpoint, labels=c("PC1","Animal Length","Brood Size")),
fill = factor(cpoint, labels=c("PC1","Animal Length","Brood Size")),
shape = factor(cpoint, labels=c("PC1","Animal Length","Brood Size"))),
data = dplyr::filter(pt_df, trait %in% c("PC1","norm.n","median.TOF"),
condition == "arsenic3"))+
scale_shape_manual(values=c(21,21,21,1))+
scale_color_manual(values=c("black","black","black","gray50"))+
scale_fill_manual(values=c("red","hotpink3","cadetblue3","gray50"))+
scale_size_manual(values=c(3,3,3,1))+
labs(y = expression(italic(H)[AddEpp]^2), x = expression(italic(H)[Add]^2),
color="Trait",
size = "Trait",
fill="Trait",
shape="Trait")+
theme_bw(18)+
ylim(c(0,1))+
scale_x_continuous(breaks=c(0,0.5,1), limits = c(0,1))+
geom_abline(slope=1,intercept = 0, linetype = 2, alpha = 0.5)+
theme(strip.background = element_blank(),
legend.position = "top",
panel.grid.minor = element_blank())
ggsave(glue::glue("{resub.plots}FS14_GWAS-H2add_v_H2addepp.pdf"),
height = 8,
width = 10)
gwas_mapping <- data.table::fread(glue::glue("{resub.data}Supplemental_Data21_PC1_processed_mapping.tsv"))
independent_tests <- data.table::fread(glue::glue("{resub.data}Supplemental_Data23_total_independent_tests.txt"))
gwas_fine_mapping <- data.table::fread(glue::glue("{resub.data}Supplemental_Data22_PC1_snpeff_genes.tsv"))
geno_matrix <- readr::read_tsv(glue::glue("{resub.data}Supplemental_Data19_Genotype_Matrix.tsv"))%>%
na.omit()
peak_pos <- na.omit(gwas_mapping) %>%
dplyr::mutate(facet_marker = paste0(CHROM, ":", peakPOS)) %>%
dplyr::pull(facet_marker) %>%
unique()
pxg_split_plot <- na.omit(gwas_mapping) %>%
dplyr::mutate(facet_marker = paste0(CHROM, ":", peakPOS)) %>%
dplyr::group_by(allele, facet_marker)%>%
dplyr::mutate(mean_pheno = mean(as.numeric(value), na.rm = T))%>%
dplyr::mutate(n2_cb = case_when(
strain == "N2" ~ "1",
strain == "CB4856" ~ "2",
TRUE ~ "3"
)) %>%
ggplot()+
aes(x = factor(allele, levels = c(-1,1), labels = c("REF","ALT")))+
geom_beeswarm(cex=2,priority='density',
aes(y = as.numeric(value),
fill = n2_cb,
size = n2_cb),
shape = 21)+
geom_boxplot(aes(y=as.numeric(value)), alpha = 0.5, fill = "gray70") +
scale_fill_manual(values=c("orange","blue", "gray50"))+
scale_size_manual(values=c(4,4,2))+
theme_bw(15)+
labs(y = "PC1",
x = glue::glue("Genotype at {peak_pos}")) +
arsenic.theme +
theme(strip.background.x = element_blank())+
theme(legend.position = "none")
snpeff_fine <- gwas_fine_mapping %>%
dplyr::select(MARKER, POS, STRAIN, REF,ALT, TGT = STRAIN_GENOTYPE, VARIANT_IMPACT,
VARIANT_LD_WITH_PEAK_MARKER, PEAK_MARKER, QTL_INTERVAL_START,
QTL_INTERVAL_END, VARIANT_LOG10p)
snpeff_fine$VARIANT_IMPACT[is.na(snpeff_fine$VARIANT_IMPACT)] <- "INTERGENIC"
LD_genotypes <- snpeff_fine %>%
dplyr::filter(STRAIN == "CB4856", TGT == ALT)  %>%
dplyr::mutate(tidy_marker = gsub("_",":",MARKER))
peak_roi_marker <- LD_genotypes %>%
dplyr::filter(tidy_marker == PEAK_MARKER)
finemap_plot <- LD_genotypes%>%
na.omit() %>%
ggplot() +
aes(x = POS/1e6) +
geom_vline(aes(xintercept = 7931252/1e6),
color = "red",
linetype = 2) +
geom_vline(aes(xintercept = 7.83), color = "gray60")+
geom_vline(aes(xintercept = 8.02), color = "gray60")+
geom_point(aes(fill = factor(VARIANT_IMPACT,
levels = rev(c("INTERGENIC", "MODIFIER", "LOW", "MODERATE", "HIGH"))),
y = VARIANT_LOG10p),
size = 2,
shape = 21)+
scale_fill_viridis_d(name = "Variant\nImpact", direction = -1) +
theme_bw(15)+
arsenic.theme +
labs(x = "Genomic Position (Mb)",
y = expression(-log[10](italic(p))))+
theme(strip.background.x  = element_blank())
bottom <- plot_grid(pxg_split_plot,
finemap_plot,
labels = c("B", "C"),
rel_widths = c(0.5,1),
align = 'v',
label_size = 18,
ncol = 2)
figure2 <- plot_grid(pc1_manplot,
bottom,
labels = c("A", ""),
rel_heights = c(1,1),
align = 'v',
label_size = 18,
ncol = 1)
LD_genotypes <- snpeff_fine %>%
dplyr::filter(STRAIN == "CB4856") %>%
dplyr::mutate(cb_alt = ifelse(REF == TGT, "CB4856 REF", "CB4856 ALT")) %>%
dplyr::mutate(tidy_marker = gsub("_",":",MARKER))
peak_roi_marker <- LD_genotypes %>%
dplyr::filter(tidy_marker == PEAK_MARKER)
LD_genotypes%>%
na.omit() %>%
ggplot() +
aes(x = POS/1e6) +
geom_vline(aes(xintercept = 7931252/1e6),
color = "red",
linetype = 2) +
geom_vline(aes(xintercept = 7.83), color = "gray60")+
geom_vline(aes(xintercept = 8.02), color = "gray60")+
geom_point(aes(fill = factor(VARIANT_IMPACT,
levels = rev(c("INTERGENIC", "MODIFIER", "LOW", "MODERATE", "HIGH"))),
y = VARIANT_LOG10p),
size = 2,
shape = 21)+
facet_grid(.~cb_alt) +
scale_fill_viridis_d(name = "Variant\nImpact", direction = -1) +
theme_bw(15)+
arsenic.theme +
labs(x = "Genomic Position (Mb)",
y = expression(-log[10](italic(p))))+
theme(strip.background.x  = element_blank())
ggsave(glue::glue("{resub.plots}FS14_GWAS_FINE_MAP.pdf"),
height = 8,
width = 12)
ggsave(glue::glue("{resub.plots}FS15_GWAS_FINE_MAP.pdf"),
height = 8,
width = 12)
swap_pheno <- data.table::fread(glue::glue("{resub.data}Supplemental_Data13_NIL_control_regressed.tsv"))
# calculate % effect size of swaps
test_swap <- swap_pheno%>%
dplyr::filter(Trait == "PC1",
Strain != "ECA591",
Strain != "ECA414",
Strain != "ECA434",
Strain != "ECA582",
Strain != "ECA589")%>%
dplyr::mutate(strain1 = factor(Strain,
levels = c("N2","ECA581","CB4856","ECA590"),
labels =c("N2\nDBT-1(C78)",
"N2\nDBT-1 (S78)",
"CB4856\nDBT-1 (S78)",
"CB4856\nDBT-1(C78)" ),
ordered = T))
sjstats::anova_stats(car::Anova(aov(Value ~ Strain, data = dplyr::filter(test_swap, Strain %in% c("N2", "CB4856")))))
sjstats::anova_stats(car::Anova(aov(Value ~ Strain, data = dplyr::filter(test_swap, Strain %in% c("N2", "ECA581")))))
sjstats::anova_stats(car::Anova(aov(Value ~ Strain, data = dplyr::filter(test_swap, Strain %in% c("CB4856", "ECA590")))))
2.516/3.657
View(nil_pheno)
rescue_pheno <- data.table::fread( glue::glue("{resub.data}Supplemental_Data23_Rescue_control_regressed.tsv"))
# PC trait correlation plot
rescue_to_lm <- rescue_pheno %>%
dplyr::filter(Trait %in% c("norm.n", "median.TOF", "PC1"),
Condition %in% c("Arsenic",
"C15ISO64",
"ArsenicC15ISO64")) %>%
tidyr::spread(Trait, Value) %>%
tidyr::gather(CorTrait, value, -(Strain:conc), -PC1)
lm_ls <- list()
for(tra in 1:length(unique(rescue_to_lm$CorTrait))) {
rescue_trait_to_lm <- rescue_to_lm %>%
dplyr::filter(CorTrait == unique(rescue_to_lm$CorTrait)[tra]) %>%
dplyr::distinct(Strain, Condition, value, .keep_all = T)
lm_ls[[tra]] <- rescue_trait_to_lm %>%
tidyr::nest(CorTrait) %>%
mutate(model = purrr::map(data, ~ lm(PC1 ~ value, data = .x)),
adj.r.squared = purrr::map_dbl(model, ~ signif(summary(.x)$adj.r.squared, 5)),
intercept = purrr::map_dbl(model, ~ signif(.x$coef[[1]],5)),
slope = purrr::map_dbl(model, ~ signif(.x$coef[[2]], 5)),
pvalue = purrr::map_dbl(model, ~ signif(summary(.x)$coef[2,4], 5))
)    %>%
dplyr::select(-data, -model) %>%
dplyr::left_join(rescue_trait_to_lm)
}
rescue_trait_cor <- data.table::fread( glue::glue("{resub.data}Supplemental_Data24_Rescue_Trait_Correlations.tsv"))
rescue_pc_loading <- data.table::fread( glue::glue("{resub.data}Supplemental_Data25_Rescue_PC_Loadings.tsv"))
rescue_pheno_pr <- rescue_pheno %>%
dplyr::group_by(Strain, Condition, Trait)%>%
dplyr::mutate(mph = median(Value),
sph = sd(Value))%>%
dplyr::mutate(flag_h = 2*sph+mph,
flag_l = mph-2*sph)%>%
dplyr::mutate(cut_h =ifelse(Value >= 2*sph+mph, "YES", "NO"),
cut_l =ifelse(Value <= mph-2*sph, "YES", "NO"))%>%
dplyr::filter(cut_h != "YES" , cut_l !="YES")%>%
dplyr::ungroup()%>%
dplyr::select(-cut_l, -cut_h,-flag_l,-flag_h,-sph,-mph)
mc <- "64"
cc <- c("Arsenic",
"C15ISO64",
"ArsenicC15ISO64")
boxplot_plt(df = rescue_pheno_pr,
trt = "PC1",
cond = cc,
fancy_name = paste0("PC 1"),
strains = c("N2",
"CB4856",
"ECA581",
"ECA590"),
fancy_strains = c("Bristol",
"Hawaii",
"Bristol\n(C78S)",
"Hawaii\n(S78C)"),
ordered_conditions = c("EtOH",
"C15ISO12",
"C15ISO24",
"C15ISO48",
"C15ISO64",
"C15ISO100",
'Arsenic',
"ArsenicC15ISO12",
"ArsenicC15ISO24",
"ArsenicC15ISO48",
"ArsenicC15ISO64",
"ArsenicC15ISO100"),
fancy_ordered_conditions = c("EtOH",
"C15ISO\n12",
"C15ISO\n24",
"C15ISO\n48",
"C15ISO\n64",
"C15ISO\n100",
'Arsenic',
"Arsenic\nC15ISO\n12",
"Arsenic\nC15ISO\n24",
"Arsenic\nC15ISO\n48",
"Arsenic\nC15ISO\n64",
"Arsenic\nC15ISO\n100"),
r_conc = mc)+ theme(axis.text.x = ggplot2::element_text(size = 12),
axis.title.y = element_text(size =16))
mc <- "64"
cc <- c("Arsenic",
"ArsenicC15ISO64")
boxplot_plt(df = rescue_pheno_pr,
trt = "PC1",
cond = cc,
fancy_name = paste0("PC 1"),
strains = c("N2",
"CB4856",
"ECA581",
"ECA590"),
fancy_strains = c("Bristol",
"Hawaii",
"Bristol\n(C78S)",
"Hawaii\n(S78C)"),
ordered_conditions = c("EtOH",
"C15ISO12",
"C15ISO24",
"C15ISO48",
"C15ISO64",
"C15ISO100",
'Arsenic',
"ArsenicC15ISO12",
"ArsenicC15ISO24",
"ArsenicC15ISO48",
"ArsenicC15ISO64",
"ArsenicC15ISO100"),
fancy_ordered_conditions = c("EtOH",
"C15ISO\n12",
"C15ISO\n24",
"C15ISO\n48",
"C15ISO\n64",
"C15ISO\n100",
'Arsenic',
"Arsenic\nC15ISO\n12",
"Arsenic\nC15ISO\n24",
"Arsenic\nC15ISO\n48",
"Arsenic\nC15ISO\n64",
"Arsenic\nC15ISO\n100"),
r_conc = mc)+ theme(axis.text.x = ggplot2::element_text(size = 12),
axis.title.y = element_text(size =16))
human_reads <- readr::read_csv(glue::glue("{resub.dir}Human_Experiment/Human_Reads.csv"))
pr_reads <- human_reads %>%
dplyr::filter(Arsenic_Concentration %in% c("0uM","5uM")) %>%
na.omit() %>%
dplyr::mutate(perc_edit = Guide1_edit/Guide1_total) %>%
dplyr::select(Edit, Replicate, Arsenic_Concentration, perc_edit)
cntrl <- pr_reads %>%
dplyr::filter(Arsenic_Concentration == "0uM") %>%
dplyr::rename(control_edit = perc_edit) %>%
dplyr::select(-Arsenic_Concentration) %>%
dplyr::group_by(Edit, Replicate) %>%
dplyr::mutate(control_means = mean(control_edit))
arsenic_5 <- pr_reads %>%
dplyr::filter(Arsenic_Concentration == "5uM") %>%
dplyr::rename(arsenic_edit = perc_edit) %>%
dplyr::left_join(., cntrl, by = c("Edit", "Replicate")) %>%
dplyr::mutate(delta_cntrl = (arsenic_edit - control_means)*100) %>%
dplyr::distinct(Edit, delta_cntrl, .keep_all=T) %>%
dplyr::group_by(Edit) %>%
dplyr::summarise(mean_delta = mean(delta_cntrl),
sd_delta = sd(delta_cntrl))
ggplot(arsenic_5)+
aes(x = Edit, y = mean_delta, fill = Edit)+
geom_bar(stat="identity", color = "black", size = 1) +
geom_errorbar(aes(ymin=mean_delta, ymax=mean_delta+sd_delta), width=.2, size =1) +
theme_classic(16) +
scale_fill_manual(values = c("black","hotpink3", "cadetblue3")) +
labs(y = "Percent Edit Enrichment in Arsenic") +
theme(axis.title.x = element_blank(),
legend.position = "none")
ggsave(glue::glue("{resub.plots}FXX_Human_Cell_Barplot.pdf"),
height = 6,
width = 6)
human_reads <- human_reads %>%
dplyr::mutate(id = paste(Edit, Replicate, Arsenic_Concentration,c(1:2), sep = "_")) %>%
na.omit()
fet_ls <- list()
for(ft in 1:length(unique(human_reads$id))) {
expid <- unique(human_reads$id)[ft]
aa_edit <- strsplit(expid, split = "_")[[1]][1]
replicate_n <- strsplit(expid, split = "_")[[1]][2]
arsenic_c <- strsplit(expid, split = "_")[[1]][3]
well_rep <- as.numeric(strsplit(expid, split = "_")[[1]][4])
c_wt <- dplyr::filter(human_reads,
Edit == aa_edit,
Replicate == replicate_n,
Arsenic_Concentration == "0uM") %>% dplyr::pull(Guide1_wt)
c_ed <- dplyr::filter(human_reads,
Edit == aa_edit,
Replicate == replicate_n,
Arsenic_Concentration == "0uM") %>% dplyr::pull(Guide1_edit)
a_wt <- dplyr::filter(human_reads,
Edit == aa_edit,
Replicate == replicate_n,
Arsenic_Concentration == arsenic_c) %>% dplyr::pull(Guide1_wt)
a_ed <- dplyr::filter(human_reads,
Edit == aa_edit,
Replicate == replicate_n,
Arsenic_Concentration == arsenic_c) %>% dplyr::pull(Guide1_edit)
test_table <- matrix(c(c_wt[well_rep],c_ed[well_rep],
a_wt[well_rep],a_ed[well_rep]),
nrow = 2,
dimnames = list(c("Control", "Arsenic"),
c("Unedited", "Edited")))
fet_ls[[ft]] <- data.frame(p_val = fisher.test(test_table, alternative = "greater")$p.value,
Edit = aa_edit,
Conc = arsenic_c,
Rep = well_rep)
}
fet_df <- dplyr::bind_rows(fet_ls)
citation("regress")
citation("correlateR")
citation("‘RSpectra’")
citation("RSpectra")
ggsave(glue::glue("{resub.plots}FXX_Human_Cell_Barplot.pdf"),
height = 6,
width = 8)
ggplot(arsenic_5)+
aes(x = Edit, y = mean_delta, fill = Edit)+
geom_bar(stat="identity", color = "black", size = 1) +
geom_errorbar(aes(ymin=mean_delta, ymax=mean_delta+sd_delta), width=.2, size =1) +
theme_classic(18) +
scale_fill_manual(values = c("black","hotpink3", "cadetblue3")) +
labs(y = "Percent Edit Enrichment in Arsenic") +
theme(axis.title.x = element_blank(),
legend.position = "none")
ggsave(glue::glue("{resub.plots}FXX_Human_Cell_Barplot.pdf"),
height = 6,
width = 8)
ggplot(arsenic_5)+
aes(x = factor(Edit, levels = c("W84C","S112C","R113C")), y = mean_delta, fill = Edit)+
geom_bar(stat="identity", color = "black", size = 1) +
geom_errorbar(aes(ymin=mean_delta, ymax=mean_delta+sd_delta), width=.2, size =1) +
theme_classic(18) +
scale_fill_manual(values = c("black","hotpink3", "cadetblue3")) +
labs(y = "Percent Edit Enrichment in Arsenic") +
theme(axis.title.x = element_blank(),
legend.position = "none")
ggplot(arsenic_5)+
aes(x = factor(Edit, levels = c("W84C","S112C","R113C")), y = mean_delta, fill = factor(Edit, levels = c("W84C","S112C","R113C")))+
geom_bar(stat="identity", color = "black", size = 1) +
geom_errorbar(aes(ymin=mean_delta, ymax=mean_delta+sd_delta), width=.2, size =1) +
theme_classic(18) +
scale_fill_manual(values = c("black","hotpink3", "cadetblue3")) +
labs(y = "Percent Edit Enrichment in Arsenic") +
theme(axis.title.x = element_blank(),
legend.position = "none")
ggsave(glue::glue("{resub.plots}FXX_Human_Cell_Barplot.pdf"),
height = 6,
width = 8)
ggplot(arsenic_5)+
aes(x = factor(Edit, levels = c("W84C","S112C","R113C")), y = mean_delta, fill = factor(Edit, levels = c("W84C","S112C","R113C")))+
geom_bar(stat="identity", color = "black", size = 1) +
geom_errorbar(aes(ymin=mean_delta, ymax=mean_delta+sd_delta), width=.2, size =1) +
theme_classic(18) +
scale_fill_manual(values = c("hotpink3", "cadetblue3","black")) +
labs(y = "Percent Edit Enrichment in Arsenic") +
theme(axis.title.x = element_blank(),
legend.position = "none")
ggsave(glue::glue("{resub.plots}FXX_Human_Cell_Barplot.pdf"),
height = 6,
width = 8)
View(fet_df)
boxplot_plt(df = rescue_pheno_pr,
trt = "PC1",
cond = cc,
fancy_name = paste0("PC 1"),
strains = c("N2",
"CB4856",
"ECA581",
"ECA590"),
fancy_strains = c("Bristol",
"Hawaii",
"Bristol\n(C78S)",
"Hawaii\n(S78C)"),
ordered_conditions = c("EtOH",
"C15ISO12",
"C15ISO24",
"C15ISO48",
"C15ISO64",
"C15ISO100",
'Arsenic',
"ArsenicC15ISO12",
"ArsenicC15ISO24",
"ArsenicC15ISO48",
"ArsenicC15ISO64",
"ArsenicC15ISO100"),
fancy_ordered_conditions = c("EtOH",
"C15ISO\n12",
"C15ISO\n24",
"C15ISO\n48",
"C15ISO\n64",
"C15ISO\n100",
'Arsenic',
"Arsenic\nC15ISO\n12",
"Arsenic\nC15ISO\n24",
"Arsenic\nC15ISO\n48",
"Arsenic\nC15ISO\n64",
"Arsenic\nC15ISO\n100"),
r_conc = mc)+ theme(axis.text.x = ggplot2::element_text(size = 12),
axis.title.y = element_text(size =16))
ggsave(glue::glue("{resub.plots}FS4C_Rescue_PC1.pdf"),
height = 6,
width = 12)
ggsave(glue::glue("{resub.plots}F4C_Rescue_PC1.pdf"),
height = 6,
width = 12)
bb_fa <- data.table::fread("~/Dropbox/AndersenLab/LabFolders/Stefan/Manuscripts/Arsenic/Resubmission/FromFrank/20181205_BP_integrated_fattyacids.csv")
View(bb_fa)
bb_fa <- data.table::fread("~/Dropbox/AndersenLab/LabFolders/Stefan/Manuscripts/Arsenic/Resubmission/FromFrank/20181205_BP_integrated_fattyacids.csv") %>%
tidyr::gather(FA, value, -Strain)
ggplot(bb_fa)+
aes(x = Strain, y = value)+
facet_grid(FA~.)+
geom_point()
ggplot(bb_fa)+
aes(x = Strain, y = value)+
facet_grid(FA~., scales = "free_y")+
geom_point()
ggplot(bb_fa)+
aes(x = Strain, y = log(value))+
facet_grid(FA~., scales = "free_y")+
geom_point()
ggplot(bb_fa)+
aes(x = (Strain, levels = c("N2", "ECA581","CB4856","ECA590")), y = log(value))+
facet_grid(FA~., scales = "free_y")+
geom_point()
ggplot(bb_fa)+
aes(x = factor(Strain, levels = c("N2", "ECA581","CB4856","ECA590")), y = log(value))+
facet_grid(FA~., scales = "free_y")+
geom_point()
bb_fa <- data.table::fread("~/Dropbox/AndersenLab/LabFolders/Stefan/Manuscripts/Arsenic/Resubmission/FromFrank/20181205_BP_integrated_fattyacids.csv") %>%
tidyr::gather(FA, value, -Strain)
ggplot(bb_fa)+
aes(x = factor(Strain, levels = c("N2", "ECA581","CB4856","ECA590")), y = log(value))+
facet_grid(FA~., scales = "free_y")+
geom_point()
ggplot(bb_fa)+
aes(x = factor(Strain, levels = c("N2", "ECA581","CB4856","ECA590")), y = log(value))+
facet_grid(FA~., scales = "free_y")+
geom_boxplot()
sfs_df <- data.table::fread("~/Dropbox/AndersenLab/LabFolders/Stefan/transfer/updated_sfs/SFS_INPUT.tsv") %>%
dplyr::filter(AC%%2 == 0) %>% # removes sites with hets
dplyr::mutate(AA_correction = ifelse(AF==0 & AA==REF, ALT, AA)) %>% # changes het alt calls in ancestor to
dplyr::mutate(DERIVED_AF = ifelse(AA_correction==REF, round(AF, digits = 5),
ifelse(AA_correction == ALT, round(1-AF, digits = 5), NA)))
View(sfs_df)
setwd("~/github_repos/sfs-dfe/data/spectra/20181205_GATK-STRELKA-intersection_XZ1516_ANC_noINDEL/")
args<c("~/Dropbox/AndersenLab/LabFolders/Stefan/transfer/updated_sfs/SFS_INPUT.tsv")
args<-c("~/Dropbox/AndersenLab/LabFolders/Stefan/transfer/updated_sfs/SFS_INPUT.tsv")
sfs_df <- data.table::fread(args[1]) %>%
dplyr::filter(AC%%2 == 0) %>% # removes sites with hets
dplyr::mutate(AA_correction = ifelse(AF==0 & AA==REF, ALT, AA)) %>% # changes het alt calls in ancestor to
dplyr::mutate(DERIVED_AF = ifelse(AA_correction==REF, round(AF, digits = 5),
ifelse(AA_correction == ALT, round(1-AF, digits = 5), NA))) %>%
dplyr::filter(nchar(REF) == nchar(ALT))
sfs_df <- data.table::fread(args[1]) %>%
dplyr::filter(AC%%2 == 0) %>% # removes sites with hets
dplyr::mutate(AA_correction = ifelse(AF==0 & AA==REF, ALT, AA)) %>% # changes het alt calls in ancestor to
dplyr::mutate(DERIVED_AF = ifelse(AA_correction==REF, round(AF, digits = 5),
ifelse(AA_correction == ALT, round(1-AF, digits = 5), NA)))
